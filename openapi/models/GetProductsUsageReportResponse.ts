/**
 * Vayu API
 * The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@withvayu.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ContractStatus } from '../models/ContractStatus';
import { Currency } from '../models/Currency';
import { HttpFile } from '../http/http';

export class GetProductsUsageReportResponse {
    'contractStatus': ContractStatus;
    'customerName': string;
    'startDate': Date;
    'endDate': Date;
    'contractName'?: string;
    'contractStartDate': Date;
    'contractEndDate'?: Date;
    'daysToContractEnd'?: number;
    'productVariantName': string;
    'commitmentConsumptionPercentage'?: number;
    'totalCommitmentCurrencyAmount'?: number;
    'totalCommitmentUnitsAmount'?: number;
    'commercialTermsAmount'?: number;
    'erpId'?: string;
    'currency': Currency;
    'usageConsumptionCurrencyAmount'?: number;
    'usageConsumptionUnitsAmount'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "contractStatus",
            "baseName": "contractStatus",
            "type": "ContractStatus",
            "format": ""
        },
        {
            "name": "customerName",
            "baseName": "customerName",
            "type": "string",
            "format": ""
        },
        {
            "name": "startDate",
            "baseName": "startDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "endDate",
            "baseName": "endDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "contractName",
            "baseName": "contractName",
            "type": "string",
            "format": ""
        },
        {
            "name": "contractStartDate",
            "baseName": "contractStartDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "contractEndDate",
            "baseName": "contractEndDate",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "daysToContractEnd",
            "baseName": "daysToContractEnd",
            "type": "number",
            "format": ""
        },
        {
            "name": "productVariantName",
            "baseName": "productVariantName",
            "type": "string",
            "format": ""
        },
        {
            "name": "commitmentConsumptionPercentage",
            "baseName": "commitmentConsumptionPercentage",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalCommitmentCurrencyAmount",
            "baseName": "totalCommitmentCurrencyAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalCommitmentUnitsAmount",
            "baseName": "totalCommitmentUnitsAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "commercialTermsAmount",
            "baseName": "commercialTermsAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "erpId",
            "baseName": "erpId",
            "type": "string",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "Currency",
            "format": ""
        },
        {
            "name": "usageConsumptionCurrencyAmount",
            "baseName": "usageConsumptionCurrencyAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "usageConsumptionUnitsAmount",
            "baseName": "usageConsumptionUnitsAmount",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GetProductsUsageReportResponse.attributeTypeMap;
    }

    public constructor() {
    }
}


